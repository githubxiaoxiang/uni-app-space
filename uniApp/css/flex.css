.test1
{
	display: flex;
	display: -webkit-flex;
	/* flex-direction属性决定主轴的方向（即项目的排列方向） row | row-reverse | column | column-reverse */
	flex-direction: row;
	/* 默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 nowrap | wrap | wrap-reverse */
	flex-wrap: wrap-reverse;
	/* flex-flow属性是flex-direction属性和flex-wrap属性的简写形式 */
	flex-flow: row wrap;
	/* 项目在主轴上的对齐方式 flex-start | flex-end | center | space-between | space-around*/
	justify-content:flex-start;
	/* 项目在交叉轴上如何对齐。 flex-start | flex-end | center | baseline | stretch  stretch：如果项目未设置高度或设为auto，将占满整个容器的高度  baseline: 项目的第一行文字的基线对齐*/
	align-items: flex-start ;
	/* align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用  flex-start | flex-end | center | space-between | space-around | stretch */
	align-content: flex-start;
}

/* 以下6个属性设置在项目上 order flex-grow flex-shrink flex-basic flex align-self */
.item1{
	/* order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0 */
	order: 0;
	/* flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大 */
	/* 如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍 */
	flex-grow: 1;
	/* flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小 */
	/* 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 负值对该属性无效。 */
	flex-shrink: 0;
	/* flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。 */
	/* 它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间 */
	flex-basis: 200rpx;
	/* flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto */
	/* 该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值 */
	flex:0 1 auto;
	/* align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。  */
	/* auto | flex-start | flex-end | center | baseline | stretch 该属性可能取6个值，除了auto，其他都与align-items属性完全一致 */
	align-self: auto;
}
.item2{
	order: -1;
	flex-grow: 2;
	
}
/* 设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。 float clear vertical-align将失效*/
/* http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html */
/* http://www.ruanyifeng.com/blog/2015/07/flex-examples.html */

/* 骰子的布局 */
/*单项目 */
.box1{
	display: flex;
}
.box2{
	display: flex;
	justify-content: center;
}
.item{
	
}
